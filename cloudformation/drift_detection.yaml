AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Drift Detection
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Basic Settings
        Parameters:
          - Enabled
          - ScheduleExpression
          - LastCheckThresholdSecs
          - Regions
          - ReportAggregate
          - ReportResources
      - Label:
          default: Notification Settings
        Parameters:
          - SnsTopicName
          - NotifyEmail
          - NotificationSubject
      - Label:
          default: Lambda Settings
        Parameters:
          - LambdaFunctionName
          - LambdaTimeout
          - LambdaS3Bucket
          - LambdaS3Key
    ParameterLabels:
      NotifyEmail:
        default: Email address to send noifications to?
Parameters:
  LambdaFunctionName:
    Type: String
    Description: Name lambda function
    Default: drift_detection
  LambdaS3Bucket:
    Type: String
    Description: Name of S3 bucket containing lambda function zip
    Default: stack-drift-notifier
  LambdaS3Key:
    Type: String
    Description: S3 key path of lambda function zip
    Default: master/lambda/drift_detection.zip
  Enabled:
    Type: String
    Description: Enabled or Disable Drift Detector
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
  LambdaTimeout:
    Type: Number
    Description: Timeout for the lambda in seconds.
    MinValue: 20
    MaxValue: 900
    Default: 300
  SnsTopicName:
    Type: String
    Description: '**REQUIRED** Email address to notify for detected drift.'
    Default: Drift-Detector
  NotifyEmail:
    Type: String
    Description: '**REQUIRED** Email address to notify for detected drift.'
    MinLength: 4
    MaxLength: 128
    AllowedPattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$"
  NotificationSubject:
    Type: String
    Description: Subject of the Email notification.
    Default: CFN Drift Detector Report
  ScheduleExpression:
    Type: String
    Description: CloudWatch Event Rule Schedule Expression
    AllowedValues:
      - rate(4 hours)
      - rate(1 day)
      - rate(2 days)
      - rate(4 days)
      - rate(7 days)
      - rate(14 days)
      - rate(28 days)
    Default: rate(1 day)
  Regions:
    Type: String
    Description: Comma-separated list of regions in scope
    Default: 'ap-south-1,eu-west-3,eu-west-2,eu-west-1,ap-northeast-2,ap-northeast-1,sa-east-1,ca-central-1,ap-southeast-1,ap-southeast-2,eu-central-1,us-east-1,us-east-2,us-west-1,us-west-2'
  LastCheckThresholdSecs:
    Type: Number
    Description: Age allowed of the last drift detection for each stack in seconds
    MinValue: 0
    Default: 60
  ReportAggregate:
    Type: String
    Description: True to report once for all stacks per region, False to report one per stack/region. In both cases, report only sent if there are drifts.
    AllowedValues: [ True, False ]
    Default: True
  ReportResources:
    Type: String
    Description: None suppresses listing of each drifted stack's drifted resources. NameOnly lists all modified and deleted resources in a drifted stack. Detailed adds more information on each resource drift.
    AllowedValues: [ None, NameOnly, Detailed ]
    Default: NameOnly

Conditions:
  PublicBucket: !Equals
    - !Ref 'LambdaS3Bucket'
    - "stack-drift-notifier"
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${LambdaFunctionName}-lambdarole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
            Effect: Allow
            Sid: ''
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
  LambdaRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DetectDrift
      Roles:
        - !Ref 'LambdaRole'
      PolicyDocument:
        Statement:
          - Sid: DetectDrift
            Action:
              - cloudformation:*Drift*
              - sns:Publish
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Ref SnsTopicName
      TopicName: !Ref SnsTopicName
      Subscription:
        - Endpoint: !Ref 'NotifyEmail'
          Protocol: email
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Detect and report cloudformation stack drift
      FunctionName: !Ref LambdaFunctionName
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 'LambdaRole.Arn'
      Code:
        S3Bucket: !If
          - PublicBucket
          - !Sub "${LambdaS3Bucket}-${AWS::Region}"
          - !Ref 'LambdaS3Bucket'
        S3Key: !Ref 'LambdaS3Key'
      Timeout: !Ref 'LambdaTimeout'
      Runtime: python3.6
      Environment:
        Variables:
          SNS_TOPIC_ID: !Ref 'SNSTopic'
          SNS_SUBJECT: !Ref 'NotificationSubject'
          REGIONS: !Ref Regions
          LAST_CHECK_THRESHOLD_SECS: !Ref LastCheckThresholdSecs
          REPORT_AGGREGATE: !Ref ReportAggregate
          REPORT_RESOURCES: !Ref ReportResources
  CloudWatchLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaFunctionName}
      RetentionInDays: 14
  Schedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${LambdaFunctionName}-schedule
      Description: CloudFormation Stack Drift Detector Schedule
      ScheduleExpression: !Ref 'ScheduleExpression'
      State: !Ref 'Enabled'
      Targets:
        - Arn: !GetAtt 'LambdaFunction.Arn'
          Id: !Ref LambdaFunctionName
  EventPermissionToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt 'LambdaFunction.Arn'
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt 'Schedule.Arn'

Outputs:
  SNSTopic:
    Description: Drift Detector SNS Topic Id
    Value: !Ref 'SNSTopic'
